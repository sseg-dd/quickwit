name: Build and publish nightly packages

on:
  workflow_dispatch:
  schedule:
    - cron: "0 5 * * *"

jobs:
  build:
    strategy:
      matrix:
        target: [x86_64-unknown-linux-gnu, aarch64-unknown-linux-gnu]
    name: Build ${{ matrix.target }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: ./.github/actions/build
        with:
          target: ${{ matrix.target }}
          version: nightly

  # build-x86_64-unknown-linux-musl-package:
  #   name: Build x86_64-unknown-linux-musl
  #   runs-on: ubuntu-latest
  #   steps:
  #     - uses: actions/checkout@v3
  #     - run: echo "ASSET_VERSION=nightly" >> $GITHUB_ENV
  #     - run: echo "ASSET_FULL_NAME=quickwit-nightly-x86_64-unknown-linux-musl" >> $GITHUB_ENV
  #     - uses: actions-rs/toolchain@v1
  #       with:
  #         toolchain: stable
  #         target: x86_64-unknown-linux-musl
  #         override: true
  #     - uses: actions-rs/cargo@v1
  #       with:
  #         use-cross: true
  #         command: build
  #         args: --release --features release-feature-set --target x86_64-unknown-linux-musl
  #     - name: Bundle archive
  #       run: |
  #         make archive BINARY_FILE=target/x86_64-unknown-linux-musl/release/quickwit \
  #           BINARY_VERSION=${{ env.ASSET_VERSION }} ARCHIVE_NAME=${{ env.ASSET_FULL_NAME }}
  #     - name: Save binary archive for few days
  #       uses: actions/upload-artifact@v3
  #       with:
  #         name: ${{ env.ASSET_FULL_NAME }}.tar.gz
  #         path: ./${{ env.ASSET_FULL_NAME }}.tar.gz
  #         retention-days: 3

  # build-aarch64-unknown-linux-musl-package: 
  #   name: Build aarch64-unknown-linux-musl
  #   runs-on: ubuntu-latest
  #   steps:
  #     - uses: actions/checkout@v3
  #     - run: echo "ASSET_VERSION=nightly" >> $GITHUB_ENV
  #     - run: echo "ASSET_FULL_NAME=quickwit-nightly-aarch64-unknown-linux-musl" >> $GITHUB_ENV
  #     - uses: actions-rs/toolchain@v1
  #       with:
  #         toolchain: stable
  #         target: aarch64-unknown-linux-musl
  #         override: true
  #     - uses: actions-rs/cargo@v1
  #       with:
  #         use-cross: true
  #         command: build
  #         args: --release --features release-feature-set --target aarch64-unknown-linux-musl
  #     - name: Bundle archive
  #       run: |
  #         make archive BINARY_FILE=target/aarch64-unknown-linux-musl/release/quickwit \
  #           BINARY_VERSION=${{ env.ASSET_VERSION }} ARCHIVE_NAME=${{ env.ASSET_FULL_NAME }}
  #     - name: Save binary archive for few days
  #       uses: actions/upload-artifact@v3
  #       with:
  #         name: ${{ env.ASSET_FULL_NAME }}.tar.gz
  #         path: ./${{ env.ASSET_FULL_NAME }}.tar.gz
  #         retention-days: 3

  # build-and-push-docker-image:
  #   name: Build & push docker images
  #   runs-on: ubuntu-latest
  #   needs:
  #     - build
  #   steps:
  #     - name: Check out the repo
  #       uses: actions/checkout@v3
  #     - run: echo "ASSET_VERSION=nightly" >> $GITHUB_ENV
  #     - run: echo "NIGHTLY_DATE=$(date '+%Y-%m-%d')" >> $GITHUB_ENV
  #     - name: Set up QEMU
  #       uses: docker/setup-qemu-action@v2
  #     - name: Set up Docker Buildx
  #       uses: docker/setup-buildx-action@v2
  #     - name: Login to DockerHub
  #       uses: docker/login-action@v2
  #       with:
  #         username: ${{ secrets.DOCKERHUB_USERNAME }}
  #         password: ${{ secrets.DOCKERHUB_ACCESS_TOKEN }}
  #     - name: Extract metadata (tags, labels) for Docker
  #       id: meta
  #       uses: docker/metadata-action@v4
  #       with:
  #         images: quickwit/quickwit-nightly
  #         labels: |
  #           org.opencontainers.image.title=Quickwit
  #           maintainer=Quickwit, Inc. <hello@quickwit.io>
  #           org.opencontainers.image.vendor=Quickwit, Inc.
  #           org.opencontainers.image.licenses=AGPL-3.0
  #     - name: Download linux/amd64 binary package
  #       uses: actions/download-artifact@v3
  #       with:
  #         name: quickwit-${{ env.ASSET_VERSION }}-x86_64-unknown-linux-musl.tar.gz
  #         path: ./docker
  #     - name: Download linux/arm64 binary package
  #       uses: actions/download-artifact@v3
  #       with:
  #         name: quickwit-${{ env.ASSET_VERSION }}-aarch64-unknown-linux-musl.tar.gz
  #         path: ./docker
  #     - name: Build and push
  #       uses: docker/build-push-action@v3
  #       with:
  #         context: ./docker/
  #         platforms: linux/amd64,linux/arm64
  #         push: true
  #         labels: ${{ steps.meta.outputs.labels }}
  #         tags: quickwit/quickwit-nightly:latest, quickwit/quickwit-nightly:${{ env.NIGHTLY_DATE }}
