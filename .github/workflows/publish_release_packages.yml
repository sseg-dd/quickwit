name: Build and publish release packages

on:
  push:
    tags:
      - 'v*'

jobs:
  build-native-packages:
    name: Build ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - build: macos
            os: macos-latest
            artifact_name: quickwit
            asset_name: x86_64-apple-darwin
          # TODO: uncomment this when windows is fully supported.
          #   Also windows artifact doesn't need to be archived     
          # - build: windows
          #   os: windows-latest
          #   artifact_name: quickwit.exe
          #   asset_name: x86_64-pc-windows.exe

    steps:
      - uses: actions/checkout@v3
      - uses: ./.github/actions/artifact-name
        with: 
          suffix: ${{ matrix.asset_name }}
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
      - name: Build binary
        run: cargo build --release --features release-feature-vendored-set
      - name: Bundle archive
        run: |
          make archive BINARY_FILE=target/release/${{ matrix.artifact_name }} \
            BINARY_VERSION=${{ env.ASSET_VERSION }} ARCHIVE_NAME=${{ env.ASSET_FULL_NAME }}
      - name: Save binary archive for few days
        uses: actions/upload-artifact@v3
        with:
          name: ${{ env.ASSET_FULL_NAME }}.tar.gz
          path: ./${{ env.ASSET_FULL_NAME }}.tar.gz
          retention-days: 3
      - name: Upload archive
        uses: quickwit-inc/upload-to-github-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          file: ${{ env.ASSET_FULL_NAME }}.tar.gz
          overwrite: true
          tag_name: ${{ env.ASSET_VERSION }}

  build-x86_64-unknown-linux-gnu-package:
    name: Build x86_64-unknown-linux-gnu
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: ./.github/actions/artifact-name
        with: 
          suffix: x86_64-unknown-linux-gnu
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          target: x86_64-unknown-linux-gnu
          override: true
      - uses: actions-rs/cargo@v1
        with:
          use-cross: true
          command: build
          args: --release --features release-feature-vendored-set --target x86_64-unknown-linux-gnu
      - name: Bundle archive
        run: |
          make archive BINARY_FILE=target/x86_64-unknown-linux-gnu/release/quickwit \
            BINARY_VERSION=${{ env.ASSET_VERSION }} ARCHIVE_NAME=${{ env.ASSET_FULL_NAME }} 
      - name: Save binary archive for few days
        uses: actions/upload-artifact@v3
        with:
          name: ${{ env.ASSET_FULL_NAME }}.tar.gz
          path: ./${{ env.ASSET_FULL_NAME }}.tar.gz
          retention-days: 3
      - name: Upload archive
        uses: quickwit-inc/upload-to-github-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          file: ${{ env.ASSET_FULL_NAME }}.tar.gz
          overwrite: true
          tag_name: ${{ env.ASSET_VERSION }}

  # build-x86_64-unknown-linux-musl-package:
  #   name: Build x86_64-unknown-linux-musl
  #   runs-on: ubuntu-latest
  #   steps:
  #     - uses: actions/checkout@v3
  #     - uses: ./.github/actions/artifact-name
  #       with: 
  #         suffix: x86_64-unknown-linux-musl
  #     - uses: actions-rs/toolchain@v1
  #       with:
  #         toolchain: stable
  #         target: x86_64-unknown-linux-musl
  #         override: true
  #     - uses: actions-rs/cargo@v1
  #       with:
  #         use-cross: true
  #         command: build
  #         args: --release --features release-feature-set --target x86_64-unknown-linux-musl
  #     - name: Bundle archive
  #       run: |
  #         make archive BINARY_FILE=target/x86_64-unknown-linux-musl/release/quickwit \
  #           BINARY_VERSION=${{ env.ASSET_VERSION }} ARCHIVE_NAME=${{ env.ASSET_FULL_NAME }}
  #     - name: Save binary archive for few days
  #       uses: actions/upload-artifact@v3
  #       with:
  #         name: ${{ env.ASSET_FULL_NAME }}.tar.gz
  #         path: ./${{ env.ASSET_FULL_NAME }}.tar.gz
  #         retention-days: 3
  #     - name: Upload archive
  #       uses: quickwit-inc/upload-to-github-release@v1
  #       env:
  #         GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  #       with:
  #         file: ${{ env.ASSET_FULL_NAME }}.tar.gz
  #         overwrite: true
  #         tag_name: ${{ env.ASSET_VERSION }}

  build-aarch64-unknown-linux-gnu-package:
    name: Build aarch64-unknown-linux-gnu
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: ./.github/actions/artifact-name
        with: 
          suffix: aarch64-unknown-linux-gnu
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          target: aarch64-unknown-linux-gnu
          override: true
      - uses: actions-rs/cargo@v1
        with:
          use-cross: true
          command: build
          args: --release --features release-feature-vendored-set --target aarch64-unknown-linux-gnu
      - name: Bundle archive
        run: |
          make archive BINARY_FILE=target/aarch64-unknown-linux-gnu/release/quickwit \
            BINARY_VERSION=${{ env.ASSET_VERSION }} ARCHIVE_NAME=${{ env.ASSET_FULL_NAME }}
      - name: Save binary archive for few days
        uses: actions/upload-artifact@v3
        with:
          name: ${{ env.ASSET_FULL_NAME }}.tar.gz
          path: ./${{ env.ASSET_FULL_NAME }}.tar.gz
          retention-days: 3
      - name: Upload archive
        uses: quickwit-inc/upload-to-github-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          file: ${{ env.ASSET_FULL_NAME }}.tar.gz
          overwrite: true
          tag_name: ${{ env.ASSET_VERSION }}

  # build-aarch64-unknown-linux-musl-package: 
  #   name: Build aarch64-unknown-linux-musl
  #   runs-on: ubuntu-latest
  #   steps:
  #     - uses: actions/checkout@v3
  #     - uses: ./.github/actions/artifact-name
  #       with: 
  #         suffix: aarch64-unknown-linux-musl
  #     - uses: actions-rs/toolchain@v1
  #       with:
  #         toolchain: stable
  #         target: aarch64-unknown-linux-musl
  #         override: true
  #     - uses: actions-rs/cargo@v1
  #       with:
  #         use-cross: true
  #         command: build
  #         args: --release --features release-feature-set --target aarch64-unknown-linux-musl
  #     - name: Bundle archive
  #       run: |
  #         make archive BINARY_FILE=target/aarch64-unknown-linux-musl/release/quickwit \
  #           BINARY_VERSION=${{ env.ASSET_VERSION }} ARCHIVE_NAME=${{ env.ASSET_FULL_NAME }}
  #     - name: Save binary archive for few days
  #       uses: actions/upload-artifact@v3
  #       with:
  #         name: ${{ env.ASSET_FULL_NAME }}.tar.gz
  #         path: ./${{ env.ASSET_FULL_NAME }}.tar.gz
  #         retention-days: 3
  #     - name: Upload archive
  #       uses: quickwit-inc/upload-to-github-release@v1
  #       env:
  #         GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  #       with:
  #         file: ${{ env.ASSET_FULL_NAME }}.tar.gz
  #         overwrite: true
  #         tag_name: ${{ env.ASSET_VERSION }}

  # build-and-push-docker-image:
  #   name: Build & push docker images
  #   runs-on: ubuntu-latest
  #   needs:
  #     - build-native-packages
  #     - build-x86_64-unknown-linux-gnu-package
  #     - build-x86_64-unknown-linux-musl-package
  #     - build-aarch64-unknown-linux-gnu-package
  #     - build-aarch64-unknown-linux-musl-package
  #   steps:
  #     - name: Check out the repo
  #       uses: actions/checkout@v3
  #     - name: Extract version
  #       uses: ./.github/actions/artifact-name
  #       with: 
  #         suffix: ''
  #     - name: Set up QEMU
  #       uses: docker/setup-qemu-action@v2
  #     - name: Set up Docker Buildx
  #       uses: docker/setup-buildx-action@v2
  #     - name: Login to DockerHub
  #       uses: docker/login-action@v2
  #       with:
  #         username: ${{ secrets.DOCKERHUB_USERNAME }}
  #         password: ${{ secrets.DOCKERHUB_ACCESS_TOKEN }}
  #     - name: Extract metadata (tags, labels) for Docker
  #       id: meta
  #       uses: docker/metadata-action@v4
  #       with:
  #         images: quickwit/quickwit
  #         labels: |
  #           org.opencontainers.image.title=Quickwit
  #           maintainer=Quickwit, Inc. <hello@quickwit.io>
  #           org.opencontainers.image.vendor=Quickwit, Inc.
  #           org.opencontainers.image.licenses=AGPL-3.0
  #     - name: Download linux/amd64 binary package
  #       uses: actions/download-artifact@v3
  #       with:
  #         name: quickwit-${{ env.ASSET_VERSION }}-x86_64-unknown-linux-musl.tar.gz
  #         path: ./docker
  #     - name: Download linux/arm64 binary package
  #       uses: actions/download-artifact@v3
  #       with:
  #         name: quickwit-${{ env.ASSET_VERSION }}-aarch64-unknown-linux-musl.tar.gz
  #         path: ./docker
  #     - name: Build and push
  #       uses: docker/build-push-action@v3
  #       with:
  #         context: ./docker/
  #         platforms: linux/amd64,linux/arm64
  #         push: true
  #         labels: ${{ steps.meta.outputs.labels }}
  #         tags: quickwit/quickwit:latest, quickwit/quickwit:${{ env.ASSET_VERSION }}

  build-and-push-docker-image:
    name: Build & push docker images
    runs-on: ubuntu-latest
    steps:
      - name: Check out the repo
        uses: actions/checkout@v3
      - uses: ./.github/actions/build-docker
        with:
          version: nightly
